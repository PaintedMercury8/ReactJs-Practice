{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LanguageFilterItem from '../LanguageFilterItem';\nimport RepositoryItem from '../RepositoryItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languageFiltersData = [{\n  id: 'ALL',\n  language: 'All'\n}, {\n  id: 'JAVASCRIPT',\n  language: 'Javascript'\n}, {\n  id: 'RUBY',\n  language: 'Ruby'\n}, {\n  id: 'JAVA',\n  language: 'Java'\n}, {\n  id: 'CSS',\n  language: 'CSS'\n}];\nconst views = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING'\n};\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterClick: languageFiltersData[0].id,\n      view: views.success,\n      calledData: []\n    };\n    this.onClickLanguageChange = id => {\n      this.setState({\n        filterClick: id\n      }, this.getData);\n    };\n    this.getData = async () => {\n      this.setState({\n        view: views.loading\n      });\n      const {\n        filterClick\n      } = this.state;\n      const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      console.log(data);\n      console.log(response);\n      const isSuccessful = response.ok;\n      if (isSuccessful === false) {\n        const filteredArray = data.popular_repos.map(eachItem => ({\n          name: eachItem.name,\n          id: eachItem.id,\n          issuesCount: eachItem.issues_count,\n          forksCount: eachItem.forks_count,\n          starsCount: eachItem.stars_count,\n          avatarUrl: eachItem.avatar_url\n        }));\n        this.setState({\n          calledData: filteredArray,\n          view: views.success\n        });\n      } else {\n        this.setState({\n          view: views.failure\n        });\n      }\n    };\n    this.getFunction = () => {\n      const {\n        view,\n        calledData\n      } = this.state;\n      console.log(view, views.success);\n      switch (view) {\n        case views.success:\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"repository-list\",\n              children: calledData.map(eachItem => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n                data: eachItem\n              }, eachItem.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false);\n        case views.loading:\n          return this.renderLoader();\n        case views.failure:\n          return this.renderFailure();\n        default:\n          return null;\n      }\n    };\n    this.renderMainContent = () => {\n      const {\n        filterClick,\n        calledData,\n        view\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"language-options-list\",\n          children: languageFiltersData.map(eachItem => /*#__PURE__*/_jsxDEV(LanguageFilterItem, {\n            data: eachItem,\n            onClickLanguageChange: this.onClickLanguageChange,\n            isTrue: eachItem.id === filterClick\n          }, eachItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), this.getFunction()]\n      }, void 0, true);\n    };\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#0284c7\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this);\n    this.renderFailure = () => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://assets.ccbp.in/frontend/react-js/api-failure-view.png\",\n      alt: \"failure view\",\n      className: \"failure-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this);\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      isFailed\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: this.renderMainContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default GithubPopularRepos;","map":{"version":3,"names":["Component","Loader","LanguageFilterItem","RepositoryItem","jsxDEV","_jsxDEV","Fragment","_Fragment","languageFiltersData","id","language","views","success","failure","loading","GithubPopularRepos","constructor","args","state","filterClick","view","calledData","onClickLanguageChange","setState","getData","url","options","method","response","fetch","data","json","console","log","isSuccessful","ok","filteredArray","popular_repos","map","eachItem","name","issuesCount","issues_count","forksCount","forks_count","starsCount","stars_count","avatarUrl","avatar_url","getFunction","children","className","fileName","_jsxFileName","lineNumber","columnNumber","renderLoader","renderFailure","renderMainContent","isTrue","type","color","height","width","src","alt","componentDidMount","render","isFailed"],"sources":["/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js"],"sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\nconst views = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING',\n}\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  state = {\n    filterClick: languageFiltersData[0].id,\n    view: views.success,\n    calledData: [],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  onClickLanguageChange = id => {\n    this.setState({filterClick: id}, this.getData)\n  }\n\n  getData = async () => {\n    this.setState({view: views.loading})\n    const {filterClick} = this.state\n    const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    console.log(response)\n    const isSuccessful = response.ok\n    if (isSuccessful === false) {\n      const filteredArray = data.popular_repos.map(eachItem => ({\n        name: eachItem.name,\n        id: eachItem.id,\n        issuesCount: eachItem.issues_count,\n        forksCount: eachItem.forks_count,\n        starsCount: eachItem.stars_count,\n        avatarUrl: eachItem.avatar_url,\n      }))\n      this.setState({calledData: filteredArray, view: views.success})\n    } else {\n      this.setState({view: views.failure})\n    }\n  }\n\n  getFunction = () => {\n    const {view, calledData} = this.state\n    console.log(view, views.success)\n    switch (view) {\n      case views.success:\n        return (\n          <>\n            <ul className=\"repository-list\">\n              {calledData.map(eachItem => (\n                <RepositoryItem data={eachItem} key={eachItem.id} />\n              ))}\n            </ul>\n          </>\n        )\n      case views.loading:\n        return this.renderLoader()\n      case views.failure:\n        return this.renderFailure()\n      default:\n        return null\n    }\n  }\n\n  renderMainContent = () => {\n    const {filterClick, calledData, view} = this.state\n    return (\n      <>\n        {' '}\n        <h1>Popular</h1>\n        <ul className=\"language-options-list\">\n          {languageFiltersData.map(eachItem => (\n            <LanguageFilterItem\n              key={eachItem.id}\n              data={eachItem}\n              onClickLanguageChange={this.onClickLanguageChange}\n              isTrue={eachItem.id === filterClick}\n            />\n          ))}\n        </ul>\n        {this.getFunction()}\n      </>\n    )\n  }\n\n  renderLoader = () => (\n    <div data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0284c7\" height={80} width={80} />\n    </div>\n  )\n\n  renderFailure = () => (\n    <img\n      src=\"https://assets.ccbp.in/frontend/react-js/api-failure-view.png\"\n      alt=\"failure view\"\n      className=\"failure-view\"\n    />\n  )\n\n  render() {\n    const {isFailed} = this.state\n    return <div className=\"main-container\">{this.renderMainContent()}</div>\n  }\n}\n\nexport default GithubPopularRepos\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}