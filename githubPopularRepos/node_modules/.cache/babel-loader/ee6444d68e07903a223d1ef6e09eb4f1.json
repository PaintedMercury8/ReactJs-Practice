{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LanguageFilterItem from '../LanguageFilterItem';\nimport RepositoryItem from '../RepositoryItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languageFiltersData = [{\n  id: 'ALL',\n  language: 'All'\n}, {\n  id: 'JAVASCRIPT',\n  language: 'Javascript'\n}, {\n  id: 'RUBY',\n  language: 'Ruby'\n}, {\n  id: 'JAVA',\n  language: 'Java'\n}, {\n  id: 'CSS',\n  language: 'CSS'\n}];\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterClick: languageFiltersData[0].id,\n      isLoading: false,\n      calledData: []\n    };\n    this.onClickLanguageChange = id => {\n      this.setState({\n        filterClick: id\n      }, this.getData);\n    };\n    this.getData = async () => {\n      this.setState({\n        isLoading: true\n      });\n      const {\n        filterClick\n      } = this.state;\n      const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      console.log(data);\n      if (response.ok === true) {\n        const filteredArray = data.popular_repos.map(eachItem => ({\n          name: eachItem.name,\n          id: eachItem.id,\n          issuesCount: eachItem.issues_count,\n          forksCount: eachItem.forks_count,\n          starsCount: eachItem.stars_count,\n          avatarUrl: eachItem.avatar_url\n        }));\n        this.setState({\n          calledData: filteredArray,\n          isLoading: false\n        });\n      }\n    };\n    this.renderMainContent = () => {\n      const {\n        filterClick,\n        calledData,\n        isLoading\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"language-options-list\",\n          children: languageFiltersData.map(eachItem => /*#__PURE__*/_jsxDEV(LanguageFilterItem, {\n            data: eachItem,\n            onClickLanguageChange: this.onClickLanguageChange,\n            isTrue: eachItem.id === filterClick\n          }, eachItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), isFailed ? this.renderLoader() : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"repository-list\",\n            children: calledData.map(eachItem => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n              data: eachItem\n            }, eachItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true);\n    };\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#0284c7\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this);\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      isFailed\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: this.renderMainContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default GithubPopularRepos;","map":{"version":3,"names":["Component","Loader","LanguageFilterItem","RepositoryItem","jsxDEV","_jsxDEV","Fragment","_Fragment","languageFiltersData","id","language","GithubPopularRepos","constructor","args","state","filterClick","isLoading","calledData","onClickLanguageChange","setState","getData","url","options","method","response","fetch","data","json","console","log","ok","filteredArray","popular_repos","map","eachItem","name","issuesCount","issues_count","forksCount","forks_count","starsCount","stars_count","avatarUrl","avatar_url","renderMainContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isTrue","isFailed","renderLoader","type","color","height","width","componentDidMount","render"],"sources":["/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js"],"sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  state = {\n    filterClick: languageFiltersData[0].id,\n    isLoading: false,\n    calledData: [],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  onClickLanguageChange = id => {\n    this.setState({filterClick: id}, this.getData)\n  }\n\n  getData = async () => {\n    this.setState({isLoading: true})\n    const {filterClick} = this.state\n    const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok === true) {\n      const filteredArray = data.popular_repos.map(eachItem => ({\n        name: eachItem.name,\n        id: eachItem.id,\n        issuesCount: eachItem.issues_count,\n        forksCount: eachItem.forks_count,\n        starsCount: eachItem.stars_count,\n        avatarUrl: eachItem.avatar_url,\n      }))\n      this.setState({calledData: filteredArray, isLoading: false})\n    }\n  }\n\n  renderMainContent = () => {\n    const {filterClick, calledData, isLoading} = this.state\n    return (\n      <>\n        {' '}\n        <h1>Popular</h1>\n        <ul className=\"language-options-list\">\n          {languageFiltersData.map(eachItem => (\n            <LanguageFilterItem\n              key={eachItem.id}\n              data={eachItem}\n              onClickLanguageChange={this.onClickLanguageChange}\n              isTrue={eachItem.id === filterClick}\n            />\n          ))}\n        </ul>\n        {isFailed ? (\n          this.renderLoader()\n        ) : (\n          <>\n            <ul className=\"repository-list\">\n              {calledData.map(eachItem => (\n                <RepositoryItem data={eachItem} key={eachItem.id} />\n              ))}\n            </ul>\n          </>\n        )}\n      </>\n    )\n  }\n\n  renderLoader = () => (\n    <div data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0284c7\" height={80} width={80} />\n    </div>\n  )\n\n  render() {\n    const {isFailed} = this.state\n    return <div className=\"main-container\">{this.renderMainContent()}</div>\n  }\n}\n\nexport default GithubPopularRepos\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}