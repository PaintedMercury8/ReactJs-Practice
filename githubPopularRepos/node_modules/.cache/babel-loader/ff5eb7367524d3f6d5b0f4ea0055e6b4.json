{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js\";\nimport { Component } from 'react';\nimport LanguageFilterItem from '../LanguageFilterItem';\nimport RepositoryItem from '../RepositoryItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languageFiltersData = [{\n  id: 'ALL',\n  language: 'All'\n}, {\n  id: 'JAVASCRIPT',\n  language: 'Javascript'\n}, {\n  id: 'RUBY',\n  language: 'Ruby'\n}, {\n  id: 'JAVA',\n  language: 'Java'\n}, {\n  id: 'CSS',\n  language: 'CSS'\n}];\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterClick: languageFiltersData[0].id,\n      isFailed: false,\n      calledData: []\n    };\n    this.onClickLanguageChange = id => {\n      this.setState({\n        filterClick: id\n      }, this.getData);\n    };\n    this.getData = async () => {\n      const {\n        filterClick\n      } = this.state;\n      const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      console.log(data);\n      if (response.ok === true) {\n        const filteredArray = data.popular_repos.map(eachItem => ({\n          name: eachItem.name,\n          id: eachItem.id,\n          issuesCount: eachItem.issues_count,\n          forksCount: eachItem.forks_count,\n          starsCount: eachItem.stars_count,\n          avatarUrl: eachItem.avatar_url\n        }));\n        this.setState({\n          calledData: filteredArray\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      filterClick,\n      calledData\n    } = this.state;\n    console.log(calledData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Popular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"language-options-list\",\n        children: languageFiltersData.map(eachItem => /*#__PURE__*/_jsxDEV(LanguageFilterItem, {\n          data: eachItem,\n          onClickLanguageChange: this.onClickLanguageChange,\n          isTrue: eachItem.id === filterClick\n        }, eachItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"repository-list\",\n        children: calledData.map(eachItem => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n          data: eachItem\n        }, eachItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GithubPopularRepos;","map":{"version":3,"names":["Component","LanguageFilterItem","RepositoryItem","jsxDEV","_jsxDEV","languageFiltersData","id","language","GithubPopularRepos","constructor","args","state","filterClick","isFailed","calledData","onClickLanguageChange","setState","getData","url","options","method","response","fetch","data","json","console","log","ok","filteredArray","popular_repos","map","eachItem","name","issuesCount","issues_count","forksCount","forks_count","starsCount","stars_count","avatarUrl","avatar_url","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isTrue"],"sources":["/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js"],"sourcesContent":["import {Component} from 'react'\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  state = {\n    filterClick: languageFiltersData[0].id,\n    isFailed: false,\n    calledData: [],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  onClickLanguageChange = id => {\n    this.setState({filterClick: id}, this.getData)\n  }\n\n  getData = async () => {\n    const {filterClick} = this.state\n    const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok === true) {\n      const filteredArray = data.popular_repos.map(eachItem => ({\n        name: eachItem.name,\n        id: eachItem.id,\n        issuesCount: eachItem.issues_count,\n        forksCount: eachItem.forks_count,\n        starsCount: eachItem.stars_count,\n        avatarUrl: eachItem.avatar_url,\n      }))\n      this.setState({calledData: filteredArray})\n    }\n  }\n\n  render() {\n    const {filterClick, calledData} = this.state\n    console.log(calledData)\n    return (\n      <div className=\"main-container\">\n        <h1>Popular</h1>\n        <ul className=\"language-options-list\">\n          {languageFiltersData.map(eachItem => (\n            <LanguageFilterItem\n              key={eachItem.id}\n              data={eachItem}\n              onClickLanguageChange={this.onClickLanguageChange}\n              isTrue={eachItem.id === filterClick}\n            />\n          ))}\n        </ul>\n        <ul className=\"repository-list\">\n          {calledData.map(eachItem => (\n            <RepositoryItem data={eachItem} key={eachItem.id} />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default GithubPopularRepos\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}