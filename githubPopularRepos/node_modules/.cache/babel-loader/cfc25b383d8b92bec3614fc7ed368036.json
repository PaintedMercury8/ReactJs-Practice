{"ast":null,"code":"var _jsxFileName = \"/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js\";\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport LanguageFilterItem from '../LanguageFilterItem';\nimport RepositoryItem from '../RepositoryItem';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languageFiltersData = [{\n  id: 'ALL',\n  language: 'All'\n}, {\n  id: 'JAVASCRIPT',\n  language: 'Javascript'\n}, {\n  id: 'RUBY',\n  language: 'Ruby'\n}, {\n  id: 'JAVA',\n  language: 'Java'\n}, {\n  id: 'CSS',\n  language: 'CSS'\n}];\nconst views = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING'\n};\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filterClick: languageFiltersData[0].id,\n      view: views.success,\n      calledData: []\n    };\n    this.onClickLanguageChange = id => {\n      this.setState({\n        filterClick: id\n      }, this.getData);\n    };\n    this.getData = async () => {\n      const {\n        filterClick\n      } = this.state;\n      const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`;\n      const options = {\n        method: 'GET'\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n      console.log(data);\n      if (response.ok === true) {\n        const filteredArray = data.popular_repos.map(eachItem => ({\n          name: eachItem.name,\n          id: eachItem.id,\n          issuesCount: eachItem.issues_count,\n          forksCount: eachItem.forks_count,\n          starsCount: eachItem.stars_count,\n          avatarUrl: eachItem.avatar_url\n        }));\n        this.setState({\n          calledData: filteredArray\n        });\n      }\n    };\n    this.renderMainContent = () => {\n      const {\n        filterClick,\n        calledData\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Popular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"language-options-list\",\n          children: languageFiltersData.map(eachItem => /*#__PURE__*/_jsxDEV(LanguageFilterItem, {\n            data: eachItem,\n            onClickLanguageChange: this.onClickLanguageChange,\n            isTrue: eachItem.id === filterClick\n          }, eachItem.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"repository-list\",\n            children: calledData.map(eachItem => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n              data: eachItem\n            }, eachItem.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false)]\n      }, void 0, true);\n    };\n    this.renderLoader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"#0284c7\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this);\n  }\n  componentDidMount() {\n    this.getData();\n  }\n  render() {\n    const {\n      isFailed\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: this.renderMainContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default GithubPopularRepos;","map":{"version":3,"names":["Component","Loader","LanguageFilterItem","RepositoryItem","jsxDEV","_jsxDEV","Fragment","_Fragment","languageFiltersData","id","language","views","success","failure","loading","GithubPopularRepos","constructor","args","state","filterClick","view","calledData","onClickLanguageChange","setState","getData","url","options","method","response","fetch","data","json","console","log","ok","filteredArray","popular_repos","map","eachItem","name","issuesCount","issues_count","forksCount","forks_count","starsCount","stars_count","avatarUrl","avatar_url","renderMainContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isTrue","renderLoader","type","color","height","width","componentDidMount","render","isFailed"],"sources":["/home/nxtwave/reactjs/coding-practices/githubPopularRepos/src/components/GithubPopularRepos/index.js"],"sourcesContent":["import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\nconst views = {\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  loading: 'LOADING',\n}\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  state = {\n    filterClick: languageFiltersData[0].id,\n    view: views.success,\n    calledData: [],\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  onClickLanguageChange = id => {\n    this.setState({filterClick: id}, this.getData)\n  }\n\n  getData = async () => {\n    const {filterClick} = this.state\n    const url = ` https://apis.ccbp.in/popular-repos?language=${filterClick}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok === true) {\n      const filteredArray = data.popular_repos.map(eachItem => ({\n        name: eachItem.name,\n        id: eachItem.id,\n        issuesCount: eachItem.issues_count,\n        forksCount: eachItem.forks_count,\n        starsCount: eachItem.stars_count,\n        avatarUrl: eachItem.avatar_url,\n      }))\n      this.setState({calledData: filteredArray})\n    }\n  }\n\n  renderMainContent = () => {\n    const {filterClick, calledData} = this.state\n    return (\n      <>\n        {' '}\n        <h1>Popular</h1>\n        <ul className=\"language-options-list\">\n          {languageFiltersData.map(eachItem => (\n            <LanguageFilterItem\n              key={eachItem.id}\n              data={eachItem}\n              onClickLanguageChange={this.onClickLanguageChange}\n              isTrue={eachItem.id === filterClick}\n            />\n          ))}\n        </ul>\n        <>\n          <ul className=\"repository-list\">\n            {calledData.map(eachItem => (\n              <RepositoryItem data={eachItem} key={eachItem.id} />\n            ))}\n          </ul>\n        </>\n      </>\n    )\n  }\n\n  renderLoader = () => (\n    <div data-testid=\"loader\">\n      <Loader type=\"ThreeDots\" color=\"#0284c7\" height={80} width={80} />\n    </div>\n  )\n\n  render() {\n    const {isFailed} = this.state\n    return <div className=\"main-container\">{this.renderMainContent()}</div>\n  }\n}\n\nexport default GithubPopularRepos\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpB,MAAMC,mBAAmB,GAAG,CAC1B;EAACC,EAAE,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAK,CAAC,EAC5B;EAACD,EAAE,EAAE,YAAY;EAAEC,QAAQ,EAAE;AAAY,CAAC,EAC1C;EAACD,EAAE,EAAE,MAAM;EAAEC,QAAQ,EAAE;AAAM,CAAC,EAC9B;EAACD,EAAE,EAAE,MAAM;EAAEC,QAAQ,EAAE;AAAM,CAAC,EAC9B;EAACD,EAAE,EAAE,KAAK;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAC7B;AAED,MAAMC,KAAK,GAAG;EACZC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,kBAAkB,SAASf,SAAS,CAAC;EAAAgB,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACzCC,KAAK,GAAG;MACNC,WAAW,EAAEX,mBAAmB,CAAC,CAAC,CAAC,CAACC,EAAE;MACtCW,IAAI,EAAET,KAAK,CAACC,OAAO;MACnBS,UAAU,EAAE;IACd,CAAC;IAAA,KAMDC,qBAAqB,GAAGb,EAAE,IAAI;MAC5B,IAAI,CAACc,QAAQ,CAAC;QAACJ,WAAW,EAAEV;MAAE,CAAC,EAAE,IAAI,CAACe,OAAO,CAAC;IAChD,CAAC;IAAA,KAEDA,OAAO,GAAG,YAAY;MACpB,MAAM;QAACL;MAAW,CAAC,GAAG,IAAI,CAACD,KAAK;MAChC,MAAMO,GAAG,GAAI,gDAA+CN,WAAY,EAAC;MACzE,MAAMO,OAAO,GAAG;QACdC,MAAM,EAAE;MACV,CAAC;MACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,OAAO,CAAC;MAC1C,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,IAAIF,QAAQ,CAACM,EAAE,KAAK,IAAI,EAAE;QACxB,MAAMC,aAAa,GAAGL,IAAI,CAACM,aAAa,CAACC,GAAG,CAACC,QAAQ,KAAK;UACxDC,IAAI,EAAED,QAAQ,CAACC,IAAI;UACnB9B,EAAE,EAAE6B,QAAQ,CAAC7B,EAAE;UACf+B,WAAW,EAAEF,QAAQ,CAACG,YAAY;UAClCC,UAAU,EAAEJ,QAAQ,CAACK,WAAW;UAChCC,UAAU,EAAEN,QAAQ,CAACO,WAAW;UAChCC,SAAS,EAAER,QAAQ,CAACS;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAACxB,QAAQ,CAAC;UAACF,UAAU,EAAEc;QAAa,CAAC,CAAC;MAC5C;IACF,CAAC;IAAA,KAEDa,iBAAiB,GAAG,MAAM;MACxB,MAAM;QAAC7B,WAAW;QAAEE;MAAU,CAAC,GAAG,IAAI,CAACH,KAAK;MAC5C,oBACEb,OAAA,CAAAE,SAAA;QAAA0C,QAAA,GACG,GAAG,eACJ5C,OAAA;UAAA4C,QAAA,EAAI;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBhD,OAAA;UAAIiD,SAAS,EAAC,uBAAuB;UAAAL,QAAA,EAClCzC,mBAAmB,CAAC6B,GAAG,CAACC,QAAQ,iBAC/BjC,OAAA,CAACH,kBAAkB;YAEjB4B,IAAI,EAAEQ,QAAS;YACfhB,qBAAqB,EAAE,IAAI,CAACA,qBAAsB;YAClDiC,MAAM,EAAEjB,QAAQ,CAAC7B,EAAE,KAAKU;UAAY,GAH/BmB,QAAQ,CAAC7B,EAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIjB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACLhD,OAAA,CAAAE,SAAA;UAAA0C,QAAA,eACE5C,OAAA;YAAIiD,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAC5B5B,UAAU,CAACgB,GAAG,CAACC,QAAQ,iBACtBjC,OAAA,CAACF,cAAc;cAAC2B,IAAI,EAAEQ;YAAS,GAAMA,QAAQ,CAAC7B,EAAE;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACpD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC,gBACL,CAAC;MAAA,eACH,CAAC;IAEP,CAAC;IAAA,KAEDG,YAAY,GAAG,mBACbnD,OAAA;MAAK,eAAY,QAAQ;MAAA4C,QAAA,eACvB5C,OAAA,CAACJ,MAAM;QAACwD,IAAI,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,MAAM,EAAE,EAAG;QAACC,KAAK,EAAE;MAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN;EAAA;EA7DDQ,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACrC,OAAO,CAAC,CAAC;EAChB;EA6DAsC,MAAMA,CAAA,EAAG;IACP,MAAM;MAACC;IAAQ,CAAC,GAAG,IAAI,CAAC7C,KAAK;IAC7B,oBAAOb,OAAA;MAAKiD,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAAE,IAAI,CAACD,iBAAiB,CAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACzE;AACF;AAEA,eAAetC,kBAAkB"},"metadata":{},"sourceType":"module"}